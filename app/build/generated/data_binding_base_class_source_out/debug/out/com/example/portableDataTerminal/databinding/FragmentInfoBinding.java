// Generated by view binder compiler. Do not edit!
package com.example.portableDataTerminal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.portableDataTerminal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentInfoBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final EditText editTextProductArticle;

  @NonNull
  public final EditText editTextProductBarcode;

  @NonNull
  public final EditText editTextProductCount;

  @NonNull
  public final EditText editTextProductDescription;

  @NonNull
  public final EditText editTextProductName;

  private FragmentInfoBinding(@NonNull FrameLayout rootView,
      @NonNull EditText editTextProductArticle, @NonNull EditText editTextProductBarcode,
      @NonNull EditText editTextProductCount, @NonNull EditText editTextProductDescription,
      @NonNull EditText editTextProductName) {
    this.rootView = rootView;
    this.editTextProductArticle = editTextProductArticle;
    this.editTextProductBarcode = editTextProductBarcode;
    this.editTextProductCount = editTextProductCount;
    this.editTextProductDescription = editTextProductDescription;
    this.editTextProductName = editTextProductName;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editText_product_article;
      EditText editTextProductArticle = ViewBindings.findChildViewById(rootView, id);
      if (editTextProductArticle == null) {
        break missingId;
      }

      id = R.id.editText_product_barcode;
      EditText editTextProductBarcode = ViewBindings.findChildViewById(rootView, id);
      if (editTextProductBarcode == null) {
        break missingId;
      }

      id = R.id.editText_product_count;
      EditText editTextProductCount = ViewBindings.findChildViewById(rootView, id);
      if (editTextProductCount == null) {
        break missingId;
      }

      id = R.id.editText_product_description;
      EditText editTextProductDescription = ViewBindings.findChildViewById(rootView, id);
      if (editTextProductDescription == null) {
        break missingId;
      }

      id = R.id.editText_product_name;
      EditText editTextProductName = ViewBindings.findChildViewById(rootView, id);
      if (editTextProductName == null) {
        break missingId;
      }

      return new FragmentInfoBinding((FrameLayout) rootView, editTextProductArticle,
          editTextProductBarcode, editTextProductCount, editTextProductDescription,
          editTextProductName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
