// Generated by view binder compiler. Do not edit!
package com.example.portableDataTerminal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.portableDataTerminal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddProductBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText articleEditText;

  @NonNull
  public final EditText barcodeEditText;

  @NonNull
  public final EditText countEditText;

  @NonNull
  public final EditText descriptionEditText;

  @NonNull
  public final EditText nameEditText;

  @NonNull
  public final EditText productIdEditText;

  private DialogAddProductBinding(@NonNull LinearLayout rootView, @NonNull EditText articleEditText,
      @NonNull EditText barcodeEditText, @NonNull EditText countEditText,
      @NonNull EditText descriptionEditText, @NonNull EditText nameEditText,
      @NonNull EditText productIdEditText) {
    this.rootView = rootView;
    this.articleEditText = articleEditText;
    this.barcodeEditText = barcodeEditText;
    this.countEditText = countEditText;
    this.descriptionEditText = descriptionEditText;
    this.nameEditText = nameEditText;
    this.productIdEditText = productIdEditText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.article_editText;
      EditText articleEditText = ViewBindings.findChildViewById(rootView, id);
      if (articleEditText == null) {
        break missingId;
      }

      id = R.id.barcode_editText;
      EditText barcodeEditText = ViewBindings.findChildViewById(rootView, id);
      if (barcodeEditText == null) {
        break missingId;
      }

      id = R.id.count_editText;
      EditText countEditText = ViewBindings.findChildViewById(rootView, id);
      if (countEditText == null) {
        break missingId;
      }

      id = R.id.description_editText;
      EditText descriptionEditText = ViewBindings.findChildViewById(rootView, id);
      if (descriptionEditText == null) {
        break missingId;
      }

      id = R.id.name_editText;
      EditText nameEditText = ViewBindings.findChildViewById(rootView, id);
      if (nameEditText == null) {
        break missingId;
      }

      id = R.id.product_id_EditText;
      EditText productIdEditText = ViewBindings.findChildViewById(rootView, id);
      if (productIdEditText == null) {
        break missingId;
      }

      return new DialogAddProductBinding((LinearLayout) rootView, articleEditText, barcodeEditText,
          countEditText, descriptionEditText, nameEditText, productIdEditText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
