// Generated by view binder compiler. Do not edit!
package com.example.portableDataTerminal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.portableDataTerminal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySyncBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonAcceptance;

  @NonNull
  public final EditText editTextIP;

  @NonNull
  public final EditText editTextName;

  @NonNull
  public final EditText editTextPassword;

  @NonNull
  public final ConstraintLayout syncLayout;

  @NonNull
  public final TextView textView;

  private ActivitySyncBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonAcceptance,
      @NonNull EditText editTextIP, @NonNull EditText editTextName,
      @NonNull EditText editTextPassword, @NonNull ConstraintLayout syncLayout,
      @NonNull TextView textView) {
    this.rootView = rootView;
    this.buttonAcceptance = buttonAcceptance;
    this.editTextIP = editTextIP;
    this.editTextName = editTextName;
    this.editTextPassword = editTextPassword;
    this.syncLayout = syncLayout;
    this.textView = textView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySyncBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySyncBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sync, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySyncBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_acceptance;
      Button buttonAcceptance = ViewBindings.findChildViewById(rootView, id);
      if (buttonAcceptance == null) {
        break missingId;
      }

      id = R.id.editText_IP;
      EditText editTextIP = ViewBindings.findChildViewById(rootView, id);
      if (editTextIP == null) {
        break missingId;
      }

      id = R.id.editText_name;
      EditText editTextName = ViewBindings.findChildViewById(rootView, id);
      if (editTextName == null) {
        break missingId;
      }

      id = R.id.editText_password;
      EditText editTextPassword = ViewBindings.findChildViewById(rootView, id);
      if (editTextPassword == null) {
        break missingId;
      }

      ConstraintLayout syncLayout = (ConstraintLayout) rootView;

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      return new ActivitySyncBinding((ConstraintLayout) rootView, buttonAcceptance, editTextIP,
          editTextName, editTextPassword, syncLayout, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
